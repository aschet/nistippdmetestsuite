parserCmdErrors.txt

There is no parserCmdErrors.res file.

This file contains what the NIST I++ command parser prints when the
parserCmdErrors.prg file is run through it. The printed error messages are
native to the NIST command parser and are intended to describe the error
very specifically. The number below each error message is the error number
from the I++ DME Interface specification that is assigned by the NIST
command parser to the error.

The parserCmdErrors.prg file was designed to trigger all the source lines
of the form "errorCode = XXX;" in the order in which these lines appear in
the file parserCmd.cc, so that is how they appear below. The second and
third digits of each tag below indicate the function that generated the
error. The third and fourth digits of each tag indicate the error message
within the function. For example, the tag 01308 means the following error
message is generated by the 13th function that generates error messages,
and it is the 8th error message generated by that function.

Responses to ClearAllErrors commands have been omitted.

00001 StartSession()
\\
E0101 AbortE(3)
AbortE: MUST HAVE NO ARGUMENTS
0502

00201 AlignPart(0, -1)
AlignPart: MUST HAVE 7 OR 14 ARGUMENTS
0502

00202 AlignPart(0"oops"-1, 0, 0.6, 0.0, 0.8, 1.0)
AlignPart: BAD ARGUMENTS
0502

00203 AlignPart(1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0"oops"2.0)
AlignPart: BAD ARGUMENTS
0502

00301 AlignTool(0, 1, 30)
AlignTool: MUST HAVE 4 OR 8 ARGUMENTS
0502

00302 AlignTool(1"oops"0, 0, 45)
AlignTool: BAD ARGUMENTS
0502

00303 AlignTool(0, -1, 0, 0.6, 0.0, 0.8, 30"oops"45)
AlignTool: BAD ARGUMENTS
0502

00401 CenterPart(1)
CenterPart: MUST HAVE 4 ARGUMENTS
0502

00402 CenterPart(1, 2, 3, "four")
CenterPart: BAD ARGUMENTS
0502

00501 ChangeTool("one","two")
ChangeTool: MUST HAVE ONE ARGUMENT
0502

00502 ChangeTool(3)
ChangeTool: ARGUMENT MUST BE STRING
0509

00601 ClearAllErrors("Now!")
ClearAllErrors: MUST HAVE NO ARGUMENTS
0502

00701 DisableUser(,)
DisableUser: MUST HAVE NO ARGUMENTS
0502

00801 EnableUser(2)
EnableUser: MUST HAVE NO ARGUMENTS
0502

00901 EndSession(2)
EndSession: MUST HAVE NO ARGUMENTS
0502

01001 EnumAllProp(Tool)
EnumAllProp: BAD ARGUMENTS
0502

01002 EnumAllProp(Speed())
EnumAllProp: ARGUMENT FIRST PART MUST BE TOOL OR FOUNDTOOL
0509

01003 EnumAllProp(Tool , )
EnumAllProp: ARGUMENT MUST END WITH EMPTY PARENTHESES
0509

01004 EnumAllProp(Tool,GoToPar())
EnumAllProp: BAD DOTS
0502

01005 EnumAllProp(Tool.Speed())
EnumAllProp: ARGUMENT SECOND PART MUST BE GOTOPAR OR PTMEASPAR
0509

01006 EnumAllProp(Tool.GoToPar.Tool())
EnumAllProp: ARGUMENT THIRD PART BAD
0509

01007 EnumAllProp(Tool.GoToPar.Speed.Name())
EnumAllProp: ARGUMENT FOURTH PART BAD
0509

01101 EnumProp(Tool)
EnumProp: BAD ARGUMENTS
0502

01102 EnumProp(Speed())
EnumProp: ARGUMENT FIRST PART MUST BE TOOL OR FOUNDTOOL
0509

01103 EnumProp(Tool , )
EnumProp: ARGUMENT MUST END WITH EMPTY PARENTHESES
0509

01104 EnumProp(Tool,GoToPar())
EnumProp: BAD DOTS
0502

01105 EnumProp(Tool.Speed())
EnumProp: ARGUMENT SECOND PART MUST BE GOTOPAR OR PTMEASPAR
0509

01106 EnumProp(Tool.GoToPar.Tool())
EnumProp: ARGUMENT THIRD PART BAD
0509

01107 EnumProp(Tool.GoToPar.Accel.Id())
EnumProp: ARGUMENT FOURTH PART BAD
0509

01201 EnumTools(2)
EnumTools: MUST HAVE NO ARGUMENTS
0502

01301 FindTool()
FindTool: MUST HAVE ONE ARGUMENT
0502

01302 FindTool(1)
FindTool: ARGUMENT MUST BE STRING
0509

01401 Get(X)
Get: BAD ARGUMENTS
0502

01402 Get(X() , Y)
Get: BAD ARGUMENTS
0502

01403 Get(X() , Y,)
Get: BAD ARGUMENTS
0502

01404 Get(R(), R())
Get: R ARGUMENT USED TWICE
0502

01405 Get(X(), X())
Get: X ARGUMENT USED TWICE
0502

01406 Get(Y(), Y())
Get: Y ARGUMENT USED TWICE
0502

01407 Get(Z(), Z())
Get: Z ARGUMENT USED TWICE
0502

01408 Get(Tool())
Get: BAD ARGUMENTS
0502

01409 Get(Tool.A(), Tool.A())
Get: TOOL A ARGUMENT USED TWICE
0502

01410 Get(Tool.B(), Tool.B())
Get: TOOL B ARGUMENT USED TWICE
0502

01411 Get(Tool.C(), Tool.C())
Get: TOOL C ARGUMENT USED TWICE
0502

01412 Get(Tool.Q())
Get: BAD ARGUMENTS
0502

01413 Get(Q())
Get: BAD ARGUMENTS
0502

01501 GetChangeToolAction()
GetChangeToolAction: MUST HAVE ONE ARGUMENT
0502

01502 GetChangeToolAction(3)
GetChangeToolAction: ARGUMENT MUST BE STRING
0509

01601 GetCoordSystem(MachineCsy)
GetCoordSystem: MUST HAVE NO ARGUMENTS
0502

01701 GetCsyTransformation()
GetCsyTransformation: MUST HAVE ONE ARGUMENT
0502

01702 GetCsyTransformation(MachineCsy)
GetCsyTransformation: BAD ARGUMENTS
0502

01801 GetDMEVersion(2)
GetDMEVersion: MUST HAVE NO ARGUMENTS
0502

01901 GetErrorInfo()
GetErrorInfo: MUST HAVE ONE ARGUMENT
0502

01902 GetErrorInfo(2.7)
GetErrorInfo: ARGUMENT MUST BE INTEGER
0509

E2001 GetErrStatusE(1)
GetErrStatusE: MUST HAVE NO ARGUMENTS
0502

02101 GetMachineClass(1)
GetMachineClass: MUST HAVE NO ARGUMENTS
0502

02201 GetProp(FoundTool.PtMeasPar.Accel(), Tool)
GetProp: BAD ARGUMENTS
0502

02202 GetProp(Speed.PtMeasPar.Accel())
GetProp: ARGUMENT FIRST PART MUST BE TOOL OR FOUNDTOOL
0509

02203 GetProp(Tool,PtMeasPar.Accel())
GetProp: BAD DOTS
0502

02204 GetProp(Tool.X.Accel())
GetProp: ARGUMENT SECOND PART BAD
0509

02205 GetProp(FoundTool.Alignment())
GetProp: BAD ARGUMENTS
0502

02206 GetProp(Tool.Speed())
GetProp: ARGUMENT SECOND PART BAD
0509

02207 GetProp(Tool.Accel.Accel())
GetProp: ARGUMENT SECOND PART BAD
0509

02208 GetProp(Tool.PtMeasPar,Speed())
GetProp: BAD DOTS
0502

02209 GetProp(Tool.PtMeasPar.Accel.Max)
GetProp: BAD ARGUMENTS
0502

02210 GetProp(FoundTool.PtMeasPar.Dis())
GetProp: ARGUMENT THIRD PART BAD
0509

02211 GetProp(Tool.PtMeasPar.Speed,Max())
GetProp: BAD DOTS
0502

02212 GetProp(Tool.PtMeasPar.Speed.Max)
GetProp: BAD ARGUMENTS
0502

02213 GetProp(Tool.PtMeasPar.Speed.Dis())
GetProp: ARGUMENT FOURTH PART BAD
0509

02214 GetProp(Tool.PtMeasPar.Speed.Max,)
GetProp: ARGUMENT MUST END WITH EMPTY PARENTHESES
0509

02215 GetProp(Tool.PtMeasPar.Speed.Max()())
GetProp: BAD ARGUMENTS
0502

E2301 GetPropE(FoundTool.PtMeasPar.Accel(), Tool)
GetPropE: BAD ARGUMENTS
0502

E2302 GetPropE(Speed.PtMeasPar.Accel())
GetPropE: ARGUMENT FIRST PART MUST BE TOOL OR FOUNDTOOL
0509

E2303 GetPropE(Tool,PtMeasPar.Accel())
GetPropE: BAD DOTS
0502

E2304 GetPropE(Tool.X.Accel())
GetPropE: ARGUMENT SECOND PART BAD
0509

E2305 GetPropE(FoundTool.Alignment())
GetPropE: BAD ARGUMENTS
0502

E2306 GetPropE(Tool.Speed())
GetPropE: ARGUMENT SECOND PART BAD
0509

E2307 GetPropE(Tool.Accel.Accel())
GetPropE: ARGUMENT SECOND PART BAD
0509

E2308 GetPropE(Tool.PtMeasPar,Speed())
GetPropE: BAD DOTS
0502

E2309 GetPropE(Tool.PtMeasPar.Accel.Max)
GetPropE: BAD ARGUMENTS
0502

E2310 GetPropE(FoundTool.PtMeasPar.Dis())
GetPropE: ARGUMENT THIRD PART BAD
0509

E2311 GetPropE(Tool.PtMeasPar.Speed,Max())
GetPropE: BAD DOTS
0502

E2312 GetPropE(Tool.PtMeasPar.Speed.Max)
GetPropE: BAD ARGUMENTS
0502

E2313 GetPropE(Tool.PtMeasPar.Speed.Dis())
GetPropE: ARGUMENT FOURTH PART BAD
0509

E2314 GetPropE(Tool.PtMeasPar.Speed.Max,)
GetPropE: ARGUMENT MUST END WITH EMPTY PARENTHESES
0509

E2315 GetPropE(Tool.PtMeasPar.Speed.Max()())
GetPropE: BAD ARGUMENTS
0502

02401 GetXtdErrStatus(1)
GetXtdErrStatus: MUST HAVE NO ARGUMENTS
0502

02501 GoTo(10.7)
GoTo: BAD ARGUMENTS
0502

02502 GoTo(10,)
GoTo: BAD ARGUMENTS
0502

02503 GoTo(X())
GoTo: BAD ARGUMENTS
0502

02504 GoTo(X(4), X(4))
GoTo: X ARGUMENT USED TWICE
0502

02505 GoTo(Y(4), Y(4))
GoTo: Y ARGUMENT USED TWICE
0502

02506 GoTo(Z(4), Z(4))
GoTo: Z ARGUMENT USED TWICE
0502

02507 GoTo(Tool.A())
GoTo: BAD ARGUMENTS
0502

02508 GoTo(Tool.A(1), Tool.A(2))
GoTo: TOOL A ARGUMENT USED TWICE
0502

02509 GoTo(Tool.B(1), Tool.B(2))
GoTo: TOOL B ARGUMENT USED TWICE
0502

02510 GoTo(Tool.C(1), Tool.C(2))
GoTo: TOOL C ARGUMENT USED TWICE
0502

02511 GoTo(Q(3))
GoTo: BAD ARGUMENTS
0502

02601 Home(1)
Home: MUST HAVE NO ARGUMENTS
0502

02701 IsHomed(1)
IsHomed: MUST HAVE NO ARGUMENTS
0502

02801 IsUserEnabled(1)
IsUserEnabled: MUST HAVE NO ARGUMENTS
0502

02901 LockAxis()
LockAxis: BAD ARGUMENTS
0502

02902 LockAxis(X(1))
LockAxis: BAD ARGUMENTS
0502

02903 LockAxis(C(), C())
LockAxis: C ARGUMENT USED TWICE
0502

02904 LockAxis(Phi(), Phi())
LockAxis: PHI ARGUMENT USED TWICE
0502

02905 LockAxis(R(), R())
LockAxis: R ARGUMENT USED TWICE
0502

02906 LockAxis(X(), X())
LockAxis: X ARGUMENT USED TWICE
0502

02907 LockAxis(Y(), Y())
LockAxis: Y ARGUMENT USED TWICE
0502

02908 LockAxis(Z(), Z())
LockAxis: Z ARGUMENT USED TWICE
0502

02909 LockAxis(Q())
LockAxis: BAD ARGUMENTS
0502

E3001 OnMoveReportE(X)
OnMoveReportE: BAD ARGUMENTS
0502

E3002 OnMoveReportE(X(2))
OnMoveReportE: BAD ARGUMENTS
0502

E3003 OnMoveReportE(R(), R())
OnMoveReportE: R ARGUMENT USED TWICE
0502

E3004 OnMoveReportE(X(), X())
OnMoveReportE: X ARGUMENT USED TWICE
0502

E3005 OnMoveReportE(Y(), Y())
OnMoveReportE: Y ARGUMENT USED TWICE
0502

E3006 OnMoveReportE(Z(), Z())
OnMoveReportE: Z ARGUMENT USED TWICE
0502

E3007 OnMoveReportE(Tool())
OnMoveReportE: BAD ARGUMENTS
0502

E3008 OnMoveReportE(Tool.A(), Tool.A())
OnMoveReportE: TOOL A ARGUMENT USED TWICE
0502

E3009 OnMoveReportE(Tool.B(), Tool.B())
OnMoveReportE: TOOL B ARGUMENT USED TWICE
0502

E3010 OnMoveReportE(Tool.C(), Tool.C())
OnMoveReportE: TOOL C ARGUMENT USED TWICE
0502

E3011 OnMoveReportE(Time(1), Dis(), X(), Y())
OnMoveReportE: DIS MUST BE FOLLOWED BY NUMBER IN PARENS
0509

E3012 OnMoveReportE(Time(1), Dis(10), X(), Y(), Dis(8))
OnMoveReportE: DIS ARGUMENT USED TWICE
0502

E3013 OnMoveReportE(Time(), Dis(10), X(), Y(), Z())
OnMoveReportE: TIME MUST BE FOLLOWED BY NUMBER IN PARENS
0509

E3014 OnMoveReportE(Time(15), Time(3), Z())
OnMoveReportE: TIME ARGUMENT USED TWICE
0502

E3015 OnMoveReportE(Q())
OnMoveReportE: BAD ARGUMENTS
0502

03101 OnPtMeasReport()
OnPtMeasReport: BAD ARGUMENTS
0502

03102 OnPtMeasReport(X(), Y)
OnPtMeasReport: BAD ARGUMENTS
0502

03103 OnPtMeasReport(X(), Y,)
OnPtMeasReport: BAD ARGUMENTS
0502

03104 OnPtMeasReport(ER(), Z(), ER())
OnPtMeasReport: ER ARGUMENT USED TWICE
0502

03105 OnPtMeasReport(IJK(), Z(), IJK())
OnPtMeasReport: IJK ARGUMENT USED TWICE
0502

03106 OnPtMeasReport(R(), Z(), R())
OnPtMeasReport: R ARGUMENT USED TWICE
0502

03107 OnPtMeasReport(X(), Z(), X())
OnPtMeasReport: X ARGUMENT USED TWICE
0502

03108 OnPtMeasReport(Y(), Z(), Y())
OnPtMeasReport: Y ARGUMENT USED TWICE
0502

03109 OnPtMeasReport(Y(), Z(), Z())
OnPtMeasReport: Z ARGUMENT USED TWICE
0502

03110 OnPtMeasReport(Tool())
OnPtMeasReport: BAD ARGUMENTS
0502

03111 OnPtMeasReport(Tool.A(), Tool.A())
OnPtMeasReport: TOOL A ARGUMENT USED TWICE
0502

03112 OnPtMeasReport(Tool.B(), Tool.B())
OnPtMeasReport: TOOL B ARGUMENT USED TWICE
0502

03113 OnPtMeasReport(Tool.C(), Tool.C())
OnPtMeasReport: TOOL C ARGUMENT USED TWICE
0502

03114 OnPtMeasReport(Q())
OnPtMeasReport: BAD ARGUMENTS
0502

03201 OnScanReport()
OnScanReport: BAD ARGUMENTS
0502

03202 OnScanReport(X(), Y)
OnScanReport: BAD ARGUMENTS
0502

03203 OnScanReport(X(), Y,)
OnScanReport: BAD ARGUMENTS
0502

03204 OnScanReport(ER(), Z(), ER())
OnScanReport: ER ARGUMENT USED TWICE
0502

03205 OnScanReport(IJK(), Z(), IJK())
OnScanReport: IJK ARGUMENT USED TWICE
0502

03206 OnScanReport(Q(), Z(), Q())
OnScanReport: Q ARGUMENT USED TWICE
0502

03207 OnScanReport(R(), Z(), R())
OnScanReport: R ARGUMENT USED TWICE
0502

03208 OnScanReport(X(), Z(), X())
OnScanReport: X ARGUMENT USED TWICE
0502

03209 OnScanReport(Y(), Z(), Y())
OnScanReport: Y ARGUMENT USED TWICE
0502

03210 OnScanReport(Y(), Z(), Z())
OnScanReport: Z ARGUMENT USED TWICE
0502

03211 OnScanReport(Tool())
OnScanReport: BAD ARGUMENTS
0502

03212 OnScanReport(Tool.A(), Tool.A())
OnScanReport: TOOL A ARGUMENT USED TWICE
0502

03213 OnScanReport(Tool.B(), Tool.B())
OnScanReport: TOOL B ARGUMENT USED TWICE
0502

03214 OnScanReport(Tool.C(), Tool.C())
OnScanReport: TOOL C ARGUMENT USED TWICE
0502

03215 OnScanReport(Dis())
OnScanReport: BAD ARGUMENTS
0502

03301 PtMeas(X)
PtMeas: BAD ARGUMENTS
0502

03302 PtMeas(X()2)
PtMeas: BAD ARGUMENTS
0502

03303 PtMeas(X(), Y(2), Z(3))
PtMeas: X NOT FOLLOWED BY NUMBER IN PARENS
0509

03304 PtMeas(X(1), X(2), Z(3))
PtMeas: X ARGUMENT USED TWICE
0502

03305 PtMeas(X(2), Y(), Z(3))
PtMeas: Y NOT FOLLOWED BY NUMBER IN PARENS
0509

03306 PtMeas(Y(1), Y(2), Z(3))
PtMeas: Y ARGUMENT USED TWICE
0502

03307 PtMeas(X(2), Y(1), Z())
PtMeas: Z NOT FOLLOWED BY NUMBER IN PARENS
0509

03308 PtMeas(Y(1), Z(2), Z(3))
PtMeas: Z ARGUMENT USED TWICE
0502

03309 PtMeas(X(1), IJK,)
PtMeas: IJK NOT FOLLOWED BY ARGIJK
0502

03310 PtMeas(X(1), IJK(2,2,2), IJK(3,2,2))
PtMeas: IJK ARGUMENT USED TWICE
0502

03311 PtMeas(IJK(3,2,2))
PtMeas: X Y Z ALL MISSING
0502

03401 ReQualify(1)
ReQualify: MUST HAVE NO ARGUMENTS
0502

03501 ScanInCylEndIsPlane(1)
ScanInCylEndIsPlane: BAD ARGUMENTS
0502

03502 ScanInCylEndIsPlane(1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,X,7,8,9,0,1,2,3,4,5,6)
ScanInCylEndIsPlane: BAD ARGUMENTS
0502

03503 ScanInCylEndIsPlane(1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,-6,7,8,9,0,1,2,3,4,5,6)
ScanInCylEndIsPlane: STEPW MUST BE POSITIVE
0509

03504 ScanInCylEndIsPlane(1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,-3,4,5,6)
ScanInCylEndIsPlane: NUMBER THROUGH MUST BE POSITIVE
0509

03505 ScanInCylEndIsPlane(1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3.1,4,5,6)
ScanInCylEndIsPlane: NUMBER THROUGH MUST BE INTEGER
0509

03506 ScanInCylEndIsPlane(X,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6)
ScanInCylEndIsPlane: BAD ARGUMENTS
0502

03601 ScanInCylEndIsSphere(1)
ScanInCylEndIsSphere: BAD ARGUMENTS
0502

03602 ScanInCylEndIsSphere(1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,X,7,8,9,10,1,2,3)
ScanInCylEndIsSphere: BAD ARGUMENTS
0502

03603 ScanInCylEndIsSphere(1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,-6,7,8,9,10,1,2,3)
ScanInCylEndIsSphere: STEPW MUST BE POSITIVE
0509

03604 ScanInCylEndIsSphere(1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,-10,1,2,3)
ScanInCylEndIsSphere: DIAMETER MUST BE POSITIVE
0509

03605 ScanInCylEndIsSphere(X,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3)
ScanInCylEndIsSphere: BAD ARGUMENTS
0502

03701 ScanInPlaneEndIsCyl(1)
ScanInPlaneEndIsCyl: BAD ARGUMENTS
0502

03702 ScanInPlaneEndIsCyl(1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,X,8,9,10,1)
ScanInPlaneEndIsCyl: BAD ARGUMENTS
0502

03703 ScanInPlaneEndIsCyl(1,2,3,4,5,6,7,8,9,-10,1,2,3,4,5,6,7,8,9,10,1)
ScanInPlaneEndIsCyl: STEPW MUST BE POSITIVE
0509

03704 ScanInPlaneEndIsCyl(1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,-7,8,9,10,1)
ScanInPlaneEndIsCyl: DIAMETER MUST BE POSITIVE
0509

03705 ScanInPlaneEndIsCyl(1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,-8,9,10,1)
ScanInPlaneEndIsCyl: NUMBER THROUGH MUST BE POSITIVE
0509

03706 ScanInPlaneEndIsCyl(1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8.1,9,10,1)
ScanInPlaneEndIsCyl: NUMBER THROUGH MUST BE INTEGER
0509

03707 ScanInPlaneEndIsCyl(X,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1)
ScanInPlaneEndIsCyl: BAD ARGUMENTS
0502

03801 ScanInPlaneEndIsPlane(1)
ScanInPlaneEndIsPlane: BAD ARGUMENTS
0502

03802 ScanInPlaneEndIsPlane(1,2,3,4,5,6,7,8,9,X,1,2,3,4,5,6,7,8,9,10)
ScanInPlaneEndIsPlane: BAD ARGUMENTS
0502

03803 ScanInPlaneEndIsPlane(1,2,3,4,5,6,7,8,9,-10,1,2,3,4,5,6,7,8,9,10)
ScanInPlaneEndIsPlane: STEPW MUST BE POSITIVE
0509

03804 ScanInPlaneEndIsPlane(1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,-7,8,9,10)
ScanInPlaneEndIsPlane: NUMBER THROUGH MUST BE POSITIVE
0509

03805 ScanInPlaneEndIsPlane(1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7.1,8,9,10)
ScanInPlaneEndIsPlane: NUMBER THROUGH MUST BE INTEGER
0509

03806 ScanInPlaneEndIsPlane(X,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10)
ScanInPlaneEndIsPlane: BAD ARGUMENTS
0502

03901 ScanInPlaneEndIsSphere(1)
ScanInPlaneEndIsSphere: BAD ARGUMENTS
0502

03902 ScanInPlaneEndIsSphere(1,2,3,4,5,6,7,8,9,X,1,2,3,4,5,6,7)
ScanInPlaneEndIsSphere: BAD ARGUMENTS
0502

03903 ScanInPlaneEndIsSphere(1,2,3,4,5,6,7,8,9,-10,1,2,3,4,5,6,7)
ScanInPlaneEndIsSphere: STEPW MUST BE POSITIVE
0509

03904 ScanInPlaneEndIsSphere(1,2,3,4,5,6,7,8,9,10,1,2,3,-4,5,6,7)
ScanInPlaneEndIsSphere: DIAMETER MUST BE POSITIVE
0509

03905 ScanInPlaneEndIsSphere(X,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7)
ScanInPlaneEndIsSphere: BAD ARGUMENTS
0502

04001 ScanOnCircle(1)
ScanOnCircle: BAD ARGUMENTS
0502

04002 ScanOnCircle(1,2,3,4,5,6,7,8,9,10,1,X)
ScanOnCircle: BAD ARGUMENTS
0502

04003 ScanOnCircle(X,2,3,4,5,6,7,8,9,10,1,2)
ScanOnCircle: BAD ARGUMENTS
0502

04101 ScanOnCircleHint(1)
ScanOnCircleHint: BAD ARGUMENTS
0502

04201 ScanOnLine(1)
ScanOnLine: BAD ARGUMENTS
0502

04202 ScanOnLine(1,2,3,4,5,6,7,8,9,X)
ScanOnLine: BAD ARGUMENTS
0502

04203 ScanOnLine(1,2,3,4,5,6,7,8,9,-10)
ScanOnLine: STEPW MUST BE POSITIVE
0509

04204 ScanOnLine(X,2,3,4,5,6,7,8,9,10)
ScanOnLine: BAD ARGUMENTS
0502

04301 ScanOnLineHint(1)
ScanOnLineHint: BAD ARGUMENTS
0502

04401 ScanUnknownHint()
ScanUnknownHint: MUST HAVE ONE ARGUMENT
0502

04402 ScanUnknownHint("bigger than a breadbox")
ScanUnknownHint: ARGUMENT MUST BE A NUMBER
0509

04403 ScanUnknownHint(-1)
ScanUnknownHint: ARGUMENT MUST BE POSITIVE
0509

04501 SetCoordSystem(MachineCsy, PartCsy)
SetCoordSystem: MUST HAVE ONE ARGUMENT
0502

04502 SetCoordSystem(JogMoveCsy)
SetCoordSystem: BAD ARGUMENTS
0502

04601 SetCsyTransformation(PartCsy)
SetCsyTransformation: MUST HAVE 7 ARGUMENTS
0502

04602 SetCsyTransformation(1, 1, 1, 1, 180, 180, 180)
SetCsyTransformation: BAD ARGUMENTS
0502

04603 SetCsyTransformation(X, 1, 1, 1, 180, 180, 180)
SetCsyTransformation: BAD FIRST ARGUMENT
0509

04604 SetCsyTransformation(PartCsy, 1, 1, 1, 200, 180, 180)
SetCsyTransformation: THETA OUT OF RANGE
1007

04701 SetProp(Tool.PtMeasPar(54))
SetProp: BAD ARGUMENTS
0502

04702 SetProp(X.PtMeasPar.Accel(3))
SetProp: ARGUMENT FIRST PART MUST BE TOOL OR FOUNDTOOL
0509

04703 SetProp(FoundTool,PtMeasPar,Speed(25.0))
SetProp: BAD DOTS
0502

04704 SetProp(FoundTool.Accel.Accel(2))
SetProp: ARGUMENT SECOND PART MUST BE GOTOPAR OR PTMEASPAR
0509

04705 SetProp(FoundTool.PtMeasPar.Dis(1))
SetProp: ARGUMENT THIRD PART BAD
0509

04706 SetProp(FoundTool.PtMeasPar.Accel())
SetProp: BAD DOTS
0502

04707 SetProp(FoundTool.PtMeasPar.Accel.Max)
SetProp: BAD ARGUMENTS
0502

04708 SetProp(FoundTool.PtMeasPar.Accel.Max(3))
SetProp: ARGUMENT FOURTH PART MUST BE ACT
0509

04709 SetProp(FoundTool.PtMeasPar.Accel.Act())
SetProp: ARGUMENT MUST END WITH NUMBER IN PARENTHESES
0509

04710 SetProp(FoundTool.PtMeasPar.Accel.Act(4)(4))
SetProp: BAD ARGUMENTS
0502

04801 SetTool()
SetTool: MUST HAVE ONE ARGUMENT
0502

04802 SetTool(2)
SetTool: ARGUMENT MUST BE STRING
0509

04901 StartSession(1)
StartSession: MUST HAVE NO ARGUMENTS
0502

05001 StopAllDaemons(1)
StopAllDaemons: MUST HAVE NO ARGUMENTS
0502

05101 StopDaemon()
StopDaemon: MUST HAVE ONE ARGUMENT
0502

05102 StopDaemon(05101)
StopDaemon: ARGUMENT MUST BE EVENT TAG
0509

05201 TiltCenterPart()
TiltCenterPart: MUST HAVE 7 ARGUMENTS
0502

05202 TiltCenterPart(X,2,3,4,5,6,7)
TiltCenterPart: BAD ARGUMENTS
0502

05301 TiltPart()
TiltPart: MUST HAVE 4 ARGUMENTS
0502

05302 TiltPart(X,2,3,4)
TiltPart: BAD ARGUMENTS
0502

05400 Errors from parseCommand
ILLEGAL SPACE
0502

05401 GoTo(X(0.1))2
GoTo: BAD CHARACTER AFTER COMMAND END
0507

05402 AbortE()
AbortE: EVENT COMMAND MUST HAVE EVENT TAG
0001

E5403 GoTo(X(0.1))
GoTo: NON EVENT COMMAND MUST NOT HAVE EVENT TAG
0001

05500 Errors from parseCmdArguments
ILLEGAL SPACE
0502

05501 GoTo(X(1,)
GoTo: BAD COMMAND ARGUMENTS
0502

05502 GoTo(X(#))
GoTo: BAD COMMAND ARGUMENTS
0502

05600 Errors from parseCmdName
ILLEGAL SPACE
0502

05601 CmdName()
BAD COMMAND NAME
0507

05700 Errors from parseKeyword
ILLEGAL SPACE
0502

05701 GoTo(X2)
GoTo: BAD CHARACTER AFTER KEYWORD
0502

05702 GoTo(Keyword)
GoTo: BAD KEYWORD
0502

05800 Errors from parseNumber
ILLEGAL SPACE
0502

05801 GoTo(X(+1.1.2))
GoTo: BAD NUMBER TWO DECIMAL POINTS
0509

05802 GoTo(X(+.))
GoTo: BAD NUMBER NO DIGITS
0509

05803 GoTo(X(12345671901234567))
GoTo: BAD NUMBER MORE THAN 16 DIGITS
0509

05804 GoTo(X(2.1E0001))
GoTo: BAD E NUMBER EXPONENT MUST HAVE ONE TWO OR THREE DIGITS
0509

05900 Errors from parseString
ILLEGAL SPACE
0502

05901 GoTo("hello)
GoTo: BAD STRING
0509

05902 GoTo("")
GoTo: BAD STRING
0509

06000 Errors from parseTag
ILLEGAL SPACE
0502

A2345 GoTo(X(3.1))
BAD TAG CHARACTER
0001

012345 GoTo(X(3.1))
SPACE MISSING AFTER TAG
0002

E0000 AbortE()
TAG NUMBER OUT OF RANGE FOR EVENT TAG
0001

00000 GoTo(X(2.1))
TAG NUMBER OUT OF RANGE FOR COMMAND TAG
0001

06100 Errors from parseIJK
ILLEGAL SPACE
0502

06101 GoTo(IJK(1+2+3))
GoTo: BAD IJK NUMBERS
0502

06102 GoTo(IJK(2,A))
GoTo: BAD IJK NUMBERS
0502

06103 GoTo(IJK(1,2,3,4))
GoTo: BAD IJK NUMBERS
0502

06200 Errors from unSpaceInputArray
ILLEGAL SPACE
0502

06201 GoTo(X(2.1 E2))
ILLEGAL SPACE
0502

09999 EndSession()
\\
:
:
